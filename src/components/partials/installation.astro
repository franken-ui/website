---
import { resolve } from "node:path";
import { readFileSync } from "node:fs";
import { Code } from "astro-expressive-code/components";

const tag = import.meta.env.TAG || "latest";
let version = "1.0";

await (async () => {
  try {
    const response = await fetch("https://registry.npmjs.org/franken-ui");
    const data = await response.json();

    version = data["dist-tags"][tag];
  } catch (e) {}
})();

const { method = "cdn", component = "css" } = Astro.props;

let snippet = "<!-- ... -->";
let lang = "html";

if (method === "cdn") {
  snippet = readFileSync(
    resolve("src", "snippets", "installation", "cdn", `${component}.html`),
    "utf-8",
  ).replaceAll("[VERSION]", version);
} else {
  snippet = `npm install postcss franken-ui@${tag}`;
  lang = "sh";
}
---

<Code code={snippet} lang={lang} />
